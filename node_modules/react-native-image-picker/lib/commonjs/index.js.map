{"version":3,"sources":["index.ts"],"names":["DEFAULT_OPTIONS","title","cancelButtonTitle","takePhotoButtonTitle","chooseFromLibraryButtonTitle","quality","allowsEditing","permissionDenied","text","reTryTitle","okTitle","ImagePicker","optionsOrCallback","callback","NativeInterface","showImagePicker","Error","options","launchCamera","launchImageLibrary"],"mappings":"2cASA,mFAgEA,gS,8hBA7DA,GAAMA,CAAAA,eAAmC,CAAG,CAC1CC,KAAK,CAAE,gBADmC,CAE1CC,iBAAiB,CAAE,QAFuB,CAG1CC,oBAAoB,CAAE,aAHoB,CAI1CC,4BAA4B,CAAE,sBAJY,CAK1CC,OAAO,CAAE,GALiC,CAM1CC,aAAa,CAAE,KAN2B,CAO1CC,gBAAgB,CAAE,CAChBN,KAAK,CAAE,mBADS,CAEhBO,IAAI,CACF,mFAHc,CAIhBC,UAAU,CAAE,QAJI,CAKhBC,OAAO,CAAE,UALO,CAPwB,CAA5C,C,GAmBMC,CAAAA,W,gLAKFC,iB,CACAC,Q,CACM,CACN,GAAI,MAAOD,CAAAA,iBAAP,GAA6B,UAAjC,CAA6C,CAC3C,MAAOE,0BAAgBC,eAAhB,CACLf,eADK,CAELY,iBAFK,CAAP,CAID,CAED,GAAIC,QAAQ,EAAI,IAAhB,CAAsB,CACpB,KAAM,IAAIG,CAAAA,KAAJ,CAAU,8BAAV,CAAN,CACD,CAED,MAAOF,0BAAgBC,eAAhB,kBACDf,eADC,IACmBY,iBADnB,EAELC,QAFK,CAAP,CAID,C,kDAEYI,O,CAA6BJ,Q,CAA0B,CAClE,MAAOC,0BAAgBI,YAAhB,kBACDlB,eADC,IACmBiB,OADnB,EAELJ,QAFK,CAAP,CAID,C,8DAEkBI,O,CAA6BJ,Q,CAA0B,CACxE,MAAOC,0BAAgBK,kBAAhB,kBACDnB,eADC,IACmBiB,OADnB,EAELJ,QAFK,CAAP,CAID,C,wCAGY,GAAIF,CAAAA,WAAJ,E","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport NativeInterface from './internal/nativeInterface';\nimport {ImagePickerOptions, ImagePickerResponse} from './internal/types';\n\nconst DEFAULT_OPTIONS: ImagePickerOptions = {\n  title: 'Select a Photo',\n  cancelButtonTitle: 'Cancel',\n  takePhotoButtonTitle: 'Take Photo…',\n  chooseFromLibraryButtonTitle: 'Choose from Library…',\n  quality: 1.0,\n  allowsEditing: false,\n  permissionDenied: {\n    title: 'Permission denied',\n    text:\n      'To be able to take pictures with your camera and choose images from your library.',\n    reTryTitle: 're-try',\n    okTitle: \"I'm sure\",\n  },\n};\n\ntype Callback = (response: ImagePickerResponse) => void;\ntype OptionsOrCallback = ImagePickerOptions | Callback;\n\nclass ImagePicker {\n  showImagePicker(options: ImagePickerOptions, callback: Callback): void;\n  showImagePicker(callback: Callback): void;\n\n  showImagePicker(\n    optionsOrCallback: OptionsOrCallback,\n    callback?: Callback,\n  ): void {\n    if (typeof optionsOrCallback === 'function') {\n      return NativeInterface.showImagePicker(\n        DEFAULT_OPTIONS,\n        optionsOrCallback,\n      );\n    }\n\n    if (callback == null) {\n      throw new Error('callback cannot be undefined');\n    }\n\n    return NativeInterface.showImagePicker(\n      {...DEFAULT_OPTIONS, ...optionsOrCallback},\n      callback,\n    );\n  }\n\n  launchCamera(options: ImagePickerOptions, callback: Callback): void {\n    return NativeInterface.launchCamera(\n      {...DEFAULT_OPTIONS, ...options},\n      callback,\n    );\n  }\n\n  launchImageLibrary(options: ImagePickerOptions, callback: Callback): void {\n    return NativeInterface.launchImageLibrary(\n      {...DEFAULT_OPTIONS, ...options},\n      callback,\n    );\n  }\n}\n\nexport default new ImagePicker();\n\nexport * from './internal/types';\n"]}